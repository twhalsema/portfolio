CREATE TABLE walman.credentials
(	cred_id				INTEGER  GENERATED BY DEFAULT AS IDENTITY (START WITH 9),
	cred_name  			VARCHAR2(30)  NOT NULL,
	cred_db_host_name 		VARCHAR2(75)  NOT NULL,
	cred_db_port			NUMBER  NOT NULL,
	cred_db_service			VARCHAR2(60)  NOT NULL,
	cred_passmgr_entry		VARCHAR2(50)  NOT NULL,
	CONSTRAINT credentials_pk PRIMARY KEY (cred_id),
	CONSTRAINT cred_name_uniq UNIQUE(cred_name)
);

CREATE TABLE walman.wallets
(	wallet_id			INTEGER  GENERATED BY DEFAULT AS IDENTITY (START WITH 3),
	wallet_passmgr_entry		VARCHAR2(50) NOT NULL,
	wallet_description		VARCHAR2(100),
	wallet_local_directory		VARCHAR2(150),
	CONSTRAINT wallets_pk PRIMARY KEY (wallet_id),
	CONSTRAINT wallet_passmgr_unq UNIQUE (wallet_passmgr_entry)
);

CREATE TABLE walman.wallet_credentials
(	wallet_id 	INTEGER NOT NULL,
	cred_id		INTEGER	NOT NULL,
	CONSTRAINT wallet_cred_pk PRIMARY KEY (wallet_id, cred_id),
	CONSTRAINT walcred_walid_fk FOREIGN KEY (wallet_id) REFERENCES wallets(wallet_id) ON DELETE CASCADE,
	CONSTRAINT walcred_credid_fk FOREIGN KEY (cred_id) REFERENCES credentials(cred_id) ON DELETE CASCADE
);

CREATE TABLE walman.wallet_sites
(	site_id		INTEGER  GENERATED ALWAYS AS IDENTITY,
	wallet_id	INTEGER NOT NULL,
	site_host_name	VARCHAR2(75) NOT NULL,
	site_directory	VARCHAR2(150) NOT NULL,
	site_owner	VARCHAR2(20) NOT NULL,
	CONSTRAINT wallet_sites_pk PRIMARY KEY (site_id),
	CONSTRAINT walsite_wallet_id_fk FOREIGN KEY (wallet_id) REFERENCES wallets(wallet_id) ON DELETE CASCADE,
	CONSTRAINT walsite_host_dir_uniq  UNIQUE (site_host_name, site_directory, site_owner)
);
